# Generated by Django 2.2.5 on 2020-04-02 04:10

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contacto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacto_confirmado', models.BooleanField()),
                ('sintomas', models.BooleanField()),
                ('contacto_10minutos', models.BooleanField()),
                ('contacto_2horas', models.BooleanField()),
            ],
            managers=[
                ('contactos', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.IntegerField(choices=[(0, 'Archivo'), (1, 'Algoritmo'), (2, 'Video')], default=0)),
                ('titulo', models.CharField(max_length=128)),
                ('link', models.CharField(max_length=256)),
                ('archivo', models.FileField(upload_to='')),
            ],
            managers=[
                ('documentos', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Estadistica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('casos_Q1', models.FloatField()),
                ('casos_Q2', models.FloatField()),
                ('casos_Q3', models.FloatField()),
                ('casos_Q4', models.FloatField()),
                ('hospital_T1', models.FloatField()),
                ('hospital_T2', models.FloatField()),
                ('hospital_T3', models.FloatField()),
                ('hospital_T4', models.FloatField()),
                ('hospital_contagios', models.FloatField()),
                ('hospital_lm', models.FloatField()),
            ],
            managers=[
                ('estadisticas', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Noticia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('titulo', models.CharField(max_length=128)),
                ('imagen', models.CharField(max_length=256)),
                ('descripcion', models.CharField(max_length=1024)),
            ],
            managers=[
                ('noticias', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre', models.CharField(max_length=30)),
                ('apellido_paterno', models.CharField(max_length=30)),
                ('apellido_materno', models.CharField(max_length=30)),
                ('fecha_nacimiento', models.DateField()),
                ('funcionario', models.BooleanField()),
                ('servicio', models.IntegerField(blank=True, choices=[(1, 'Servicio 1'), (2, 'Servicio 2')], null=True)),
                ('actividad', models.IntegerField(blank=True, choices=[(1, 'Cl√≠nico'), (2, 'Administrativo')], null=True)),
                ('email', models.EmailField(max_length=254)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
